---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=d0e96dc1332122d6644bee9c92cca944&query=The%20Lion%20King
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 03 Apr 2023 21:19:14 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=21836
      X-Memc:
      - HIT
      X-Memc-Key:
      - '09f15fedf66634532e4a4f1e1a0602d3'
      X-Memc-Age:
      - '20951'
      X-Memc-Expires:
      - '649'
      Etag:
      - W/"fa876fb09baf72d35dd3ea87d30abb6b"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 1c80fe425edf82026702c486fb324fd0.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN52-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - 5XYwyeZnk3iW-MYLv6i-GaFdV7oQ8mNAlqX0L0Czc3yPueoHPYl0Aw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 03 Apr 2023 21:19:14 GMT
recorded_with: VCR 6.1.0
